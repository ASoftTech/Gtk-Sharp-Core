// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Gdk {

	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.Runtime.InteropServices;

#region Autogenerated code
	public partial class DrawingContext : GLib.Object {

		public DrawingContext (IntPtr raw) : base(raw) {}

		protected DrawingContext() : base(IntPtr.Zero)
		{
			CreateNativeObject (new string [0], new GLib.Value [0]);
		}

		[DllImport("libgdk-3-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gdk_drawing_context_get_window(IntPtr raw);

		[GLib.Property ("window")]
		public Gdk.Window Window {
			get  {
				IntPtr raw_ret = gdk_drawing_context_get_window(Handle);
				Gdk.Window ret = GLib.Object.GetObject(raw_ret) as Gdk.Window;
				return ret;
			}
		}

		[StructLayout (LayoutKind.Sequential)]
		struct GdkDrawingContextClass {
		}

		static uint class_offset = ((GLib.GType) typeof (GLib.Object)).GetClassSize ();
		static Dictionary<GLib.GType, GdkDrawingContextClass> class_structs;

		static GdkDrawingContextClass GetClassStruct (GLib.GType gtype, bool use_cache)
		{
			if (class_structs == null)
				class_structs = new Dictionary<GLib.GType, GdkDrawingContextClass> ();

			if (use_cache && class_structs.ContainsKey (gtype))
				return class_structs [gtype];
			else {
				IntPtr class_ptr = new IntPtr (gtype.GetClassPtr ().ToInt64 () + class_offset);
				GdkDrawingContextClass class_struct = (GdkDrawingContextClass) Marshal.PtrToStructure (class_ptr, typeof (GdkDrawingContextClass));
				if (use_cache)
					class_structs.Add (gtype, class_struct);
				return class_struct;
			}
		}

		static void OverrideClassStruct (GLib.GType gtype, GdkDrawingContextClass class_struct)
		{
			IntPtr class_ptr = new IntPtr (gtype.GetClassPtr ().ToInt64 () + class_offset);
			Marshal.StructureToPtr (class_struct, class_ptr, false);
		}

		[DllImport("libgdk-3-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gdk_drawing_context_get_cairo_context(IntPtr raw);

		public Cairo.Context CairoContext { 
			get {
				IntPtr raw_ret = gdk_drawing_context_get_cairo_context(Handle);
				Cairo.Context ret = new Cairo.Context (raw_ret, false);
				return ret;
			}
		}

		[DllImport("libgdk-3-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gdk_drawing_context_get_clip(IntPtr raw);

		public Cairo.Region Clip { 
			get {
				IntPtr raw_ret = gdk_drawing_context_get_clip(Handle);
				Cairo.Region ret = new Cairo.Region(raw_ret);
				return ret;
			}
		}

		[DllImport("libgdk-3-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gdk_drawing_context_get_type();

		public static new GLib.GType GType { 
			get {
				IntPtr raw_ret = gdk_drawing_context_get_type();
				GLib.GType ret = new GLib.GType(raw_ret);
				return ret;
			}
		}

		[DllImport("libgdk-3-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern bool gdk_drawing_context_is_valid(IntPtr raw);

		public bool IsValid { 
			get {
				bool raw_ret = gdk_drawing_context_is_valid(Handle);
				bool ret = raw_ret;
				return ret;
			}
		}

#endregion
	}
}
